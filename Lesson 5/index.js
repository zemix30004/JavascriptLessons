//Функция-блок кода, которій можно віполнять многократно
// let a = 5
// let b = 3
// let c
// c = a + b
// console.log(c)//8

// a = 8
// b = 12

// c = a + b
// console.log(c)//20
//тут есть повторяющиеся болки кода, их можно оптимизировать с помощью функции

// let a = 5
// let b = 3
// function sum(a, b) {
// 	const c = a + b
// 	console.log(c)
// }
// sum (a, b) //8

// a = 8
// b = 12

// sum(a, b)//20


//Функции бывают:
// 1)именованными
// 2)присвоенными переменной
// 3)анонимными
// 4)аргументами при вызове другой функции
// 5)значениями свойства(метода) объекта

//Функция это объект, который имеет определенное свойства
// function myFn(a, b) {
// 	let c
// 	a = a + 1
// 	c = a + b
// 	return c
// }
// myFn(10,3)//14
//  console.dir(myFn)

// ƒ myFn(a, b)
// arguments: null
// caller: null
// length: 2
// name: "myFn"
// prototype: {constructor: ƒ}
// [[FunctionLocation]]: VM383:1
// [[Prototype]]: ƒ ()
// [[Scopes]]: Scopes[1]
//если функция не имеет интструкции return
//то она возвращает underfined

//параметры функции в момент объявления функции, действуют только в теле
//функции это переменные a b, они не меняются
//аргументы функции работаю в момент вызова функции вне тела функции
//это аргументы-значения переменных a=10, b=3 они меняются при каждом вызове функции