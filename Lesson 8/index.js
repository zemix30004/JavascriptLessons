//Операторы  унарные бинарные, операнды, инфиксная, префиксная, постфикная записи
//1)Арифметические операторы + - * /(плюс, минус, умножить, разделить)
//2)Операторы сравнения ===  !==  <=  >=(равно, неравно,меньшеравно, большеравно)
//3)Логические операторы !  && ||(не и или)
//5)Оператор присваивания =

//Текстовые операторы
//1)typeof(тип объекта)
//2)instanceof(принадлежность объекта к тому или иному классу)
//3)new(новый объект)
//4)delete(удаление свойства объекта)

let a, b;
a = 10;
b = a;
let c = a + b;
console.log(c); //20
console.log(c); //20
//Оператор -встроенная функция
//Оператор присваивания

a = 10; //a 10 это операнды, = оператор

// function = (переменная, ввыражение) {
// 1.Получение результата выражения
// 2.Поиск переменной по имени
// 3.Присваивание результата выражения переменной
// 4.Возврат результата выражения
// }

// Унарные операторы. В таких операторах всегда один операнд(аргумент)
a++ + a;
delete obj.a;
typeof a;
new Object();

//Бинарные операторы. У них всегда два операнда(аргумента)
a = 5;
a + b;
a += 5;
a === b;
a && b;

//Инфиксная запись/ Тут оператор находится между операндами
a = true;
a + b;
a += 5;
a || b;
a > b;

//Префиксная запись. Тут оператор находится перед операндом
++a;
delete obj.a;
typeof a;

//Постфиксная запись. Туе оператор находится за операндом
a++;
myFunction(); //Тут оператор это круглые скобки

//Приоритетность операторов
a + (b * c) / d - e; //1)*  2)/  3) +  4) -
a + (b * c) / (d - e); // 1) *  2) -  3)/  4) +

//Логические операторы
//1)! означает не, ставится в самом начале , например != это неравно, возвращает boolean true или false
//2) && и
//3)|| или

//Ложные значения
Boolean(value) -> //value может быть ложным тут 5 видов ложных значений
// 1)false
// 2)0
// 3)''
// 4)underfined
// 5)null

//Примеры использования оператора ! НЕ
!10 //false
!0 //true
!'abc' //false
!''  //true
!true //false
!undefined // true

//Примеры исрользования оператора !! НЕ НЕ
!!10 //true
!!0// false
!!'abc' //true
!!''//false
!!true //true
!!undefined ///false

// Операторы короткого замыкания &&  и  || или
//Оператор &&
// Выражение 1  && Выражение 2
// Если выражение 1 ложно, то выражение 2 игнорируется
// и возвращается результат выражения 1

//Оператор ||
// Выражение 1  || Выражение 2
// Если выражение 1 истинно, то выражение 2 игнорируется
// и возвращается результат выражения 1

// Цепочка операторов && ||
a && b && c && d
a || b || c || d

//Оператор разделения обЪекта на свойства

const button = {
	width: 200;
	text: 'Buy'
}
const redButton = {
	...button,//если в объекта button есть свойство color, то его значение будет перезаписано
	color: 'red'
}
console.table(redButton)

//Пример создания нового объекта из свойст двух предыдущих:
const buttonInfo = {
	text: 'Buy'
}

const buttonStyle = {
	color: 'yellow',
	width: 200,
	height: 300
}
const button = {
...buttonInfo,
...buttonStyle
}
console.table(button)